server:
  port: ${ADMIN_SERVICE_PORT:8091}
  error:
    include-message: always


spring:

  application:
    name: ${ADMIN_SERVICE_NAME:admin-service}

  datasource:
    url: jdbc:postgresql://${DB_HOSTNAME}:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate.format_sql: true

  cloud:
    openfeign:
      httpclient:
        enabled: true
      circuitbreaker:
        enabled: false

feign:
  client:
    config:
      auth-service:
        connectTimeout: 2000
        readTimeout: 3000
        loggerLevel: BASIC

resilience4j:
  circuitbreaker:
    instances:
      authService:
        sliding-window-type: COUNT_BASED
        sliding-window-size: 10
        failure-rate-threshold: 50
        slow-call-duration-threshold: 2s
        wait-duration-in-open-state: 10s
  retry:
    instances:
      authService:
        max-attempts: 2
        wait-duration: 200ms
  ratelimiter:
    instances:
      authService:
        limit-for-period: 10
        limit-refresh-period: 10s
        timeout-duration: 0ms

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URI}
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    # evita colisiones cuando haya varias instancias
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}

management:
  endpoints:
    web:
      base-path: /admin/actuator
      exposure:
        include: health,info
  endpoint:
    health:
      probes:
        enabled: true
