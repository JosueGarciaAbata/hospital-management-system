version: "3.9"

services:
  citus-coordinator:
    image: citusdata/citus:13.2.0-pg16
    container_name: hosp-citus-coordinator
    env_file: ./.env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - citus_data:/var/lib/postgresql/data
      # Esquema base entra al initdb del coordinador
      - ./db/01_schema.sql:/docker-entrypoint-initdb.d/01_schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks: [hospital_network]
    depends_on:
      - citus-worker-1
      - citus-worker-2

  citus-worker-1:
    image: citusdata/citus:13.2.0-pg16
    container_name: hosp-citus-worker-1
    env_file: ./.env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -h localhost"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks: [hospital_network]

  citus-worker-2:
    image: citusdata/citus:13.2.0-pg16
    container_name: hosp-citus-worker-2
    env_file: ./.env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -h localhost"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks: [hospital_network]

  # Bootstrap: espera healthchecks y ejecuta 02 + 03 en el coordinador
  citus-bootstrap:
    image: citusdata/citus:13.2.0-pg16
    container_name: citus-bootstrap
    env_file: ./.env
    environment:
      DB_HOST: ${DB_HOSTNAME:-hosp-citus-coordinator}
      DB_PORT: "${DB_PORT:-5432}"
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      SHARD_COUNT: "${SHARD_COUNT:-32}"
      REPLICATION_FACTOR: "${REPLICATION_FACTOR:-1}"
      APPLY_DISTRIBUTION: "${APPLY_DISTRIBUTION:-true}"
    depends_on:
      citus-coordinator: { condition: service_healthy }
      citus-worker-1:   { condition: service_healthy }
      citus-worker-2:   { condition: service_healthy }
    volumes:
      - ./db:/init:ro                  # ← aquí van 02_citus.sql y 03_distribute_by_center.sql
      - ./scripts/bootstrap.sh:/scripts/bootstrap.sh:ro
    entrypoint: ["/bin/bash", "/scripts/bootstrap.sh"]
    networks: [hospital_network]

  auth-service:
    build:
      context: .
      dockerfile: Dockerfile-auth-service
    env_file: ./.env
    networks:
      - hospital_network
    depends_on:
      - citus-coordinator
      - eureka-server

  admin-service:
    build:
      context: .
      dockerfile: Dockerfile-admin-service
    env_file: ./.env
    networks:
      - hospital_network
    depends_on:
      - citus-coordinator
      - eureka-server

  consulting-service:
    build:
      context: .
      dockerfile: Dockerfile-consulting-service
    container_name: ${CONSULTING_NAME}
    env_file: ./.env
    ports:
      - "${CONSULTING_PORT}:${CONSULTING_PORT}"
    networks:
      - hospital_network
    depends_on:
      - citus-coordinator
      - eureka-server

  report-service:
    build:
      context: .
      dockerfile: Dockerfile-report-service
    container_name: ${REPORTING_NAME}
    env_file: ./.env
    ports:
      - "${REPORTING_PORT}:${REPORTING_PORT}"
    networks:
      - hospital_network
    depends_on:
      - citus-coordinator
      - eureka-server

  eureka-server:
    build:
      context: .
      dockerfile: Dockerfile-hospital-eureka-server
    container_name: ${EUREKA_NAME}
    env_file: ./.env
    ports:
      - "${EUREKA_PORT}:${EUREKA_PORT}"
    networks:
      - hospital_network

  gateway:
    build:
      context: .
      dockerfile: Dockerfile-hospital-gateway
    container_name: ${GATEWAY_NAME}
    env_file: ./.env
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"
    networks:
      - hospital_network
    depends_on:
      - auth-service
      - admin-service
      - consulting-service
      - report-service
      - eureka-server

volumes:
  hospital_data:
  citus_data:

networks:
  hospital_network:
    driver: bridge
